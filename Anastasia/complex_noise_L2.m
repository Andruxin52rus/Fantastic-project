clear, clc;

% генерирование гауссова шума, расчет ковариационной матрицы, отношения
% правдоподобия для случая независимости и однородности шумов (сигмаii = сигма)

M = 4;%M - количество элементов решетки
N = 16;%N - количество временныx выборок
Q = 10000;%Q - количество экспериментов
Renoise = zeros(M, 1);%Renoise - действительная часть шумового сигнала
Imnoise = zeros(M, 1);%Imnoise - мнимая часть генерированного шума
noise = zeros(M, 1);%noise - сгенерирован c использованием встроенной функции или или вручную
%матрица А - формула 8 страница 3. A=q*B
%матрица B - ковариационная матрица, В=(1/q)*A = (1/q)*sum(<noise1*noise1'>)
L2 = zeros(1,Q);%массив тест-статистик для случая однородных независимых шумов
for r=1:Q    %цикл по количеству экспериметнов
A = zeros(M);
for k=1:N    %цикл по временным выборкам
    %noise = wgn(M, 1, 1, 'complex'); %генерируем шум размерности М встроенной функцией
    Renoise = randn(M, 1)/sqrt(2); %деление на sqrt(2) для нормироки дисперсии noise1
    Imnoise = randn(M, 1)/sqrt(2);
    noise = Renoise + 1i*Imnoise;
    A=A + (noise*noise');
end;

B = A./N;
% disp('Ковариационная матрица шума');
% disp(B2);
DetA2 = det(A); %детерминант матрицы А
SpA2 = trace(A); %шпур матрицы А
%L2 - отношение правдоподобия Л2 см формулу 13 на странице 4
L2(1,r) = real((DetA2^N)./((SpA2./M)^(N*M)));
% disp('Отношение правдоподобия для независимого однородного шума');
% disp(L2(r));
end;

figure
plot(real(L2));
grid on;
title('значения L2 от количества экспериментов');
figure

v = 1000;
[m, t] = hist(L2, v);
WL2 = m/(Q*(t(2)-t(1)));
plot(t, WL2./max(WL2));
grid on;
title('функция плотности вероятности W(L2)');
xlabel('значения L2');
ylabel('плотность вероятности W(L2)');
grid on

figure
f=cumsum(m/Q);
plot(t, f);
grid on;
title('интегральная функция распределения F(L2)');
xlabel('значения L2');
ylabel('вероятность P(L2)');
grid on

disp('ковариационная матрица');
disp(B);
disp('детерминант матрицы А = B * N');
 disp(DetA2);
 disp('шпур матрицы А = B * N');
 disp(SpA2);
